ACID: Either all or nothing

Transactions
   - money got deducted
   - wire transfer of monry
   - money credited
A-atomicity

In databases, a transaction is a logical unit of work that consists of one or more database operations, such as inserts, updates, or deletions. These operations are grouped together as a single unit, which ensures that either all of them are successfully completed or none of them are, maintaining the integrity and consistency of the database.

Transactions typically adhere to the ACID properties, which stand for:

1. Atomicity: This property ensures that a transaction is treated as a single, indivisible unit of work. All operations within the transaction are either completed successfully, or if an error occurs, they are all rolled back, leaving the database in its original state.

2. Consistency: Transactions bring the database from one consistent state to another consistent state. The database remains in a valid state at all times, even in the event of system failures or errors during transaction processing.

3. Isolation: This property ensures that the intermediate state of a transaction is invisible to other transactions until it is committed. It prevents concurrent transactions from interfering with each other, maintaining data integrity and preventing issues such as dirty reads, non-repeatable reads, and phantom reads.

4. Durability: Once a transaction is committed, its changes are permanently saved and will not be lost, even in the event of system crashes or failures. The changes are recorded in non-volatile storage, such as disk, ensuring that they persist even if the system is restarted.

Transactions are essential for ensuring data integrity, reliability, and concurrency control in database systems. They provide a mechanism for handling complex database operations reliably and efficiently, even in the presence of concurrent access and system failures.